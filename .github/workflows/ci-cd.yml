name: CI/CD

# Trigger the workflow on push or pull request
# Run on all branches and pull request except gh-pages which has it's own action
on:
  push:
    branches-ignore:
      - 'gh-pages'
  pull_request:
    branches-ignore:
      - 'gh-pages'

jobs:
  # Runs automated test and other checks on the Node.js Code Base
  build-and-test-code:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 12.x
          - 14.x
        architecture:
          - x64
          # FIXME: GitHub does not offer arm64 runners at the moment.
          #
          # We can enalbe arm64 builds in the future when GitHub offers arm64 runners or we decide
          # to set up a self-hosted runner on arm64.
          # See also https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
          # and https://docs.github.com/en/free-pro-team@latest/actions/hosting-your-own-runners
          # - arm64 # Jetson Devices
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          architecture: ${{ matrix.architecture }}
      - run: npm ci
      - run: npm run build --if-present
      - run: npm test
      - run: npm run lint

  # Build docker images
  #
  # TODO: Publish docker images to dockerhub on changes in the development branch.
  # We won't push major releases. But development previews are fine.
  build-docker-and-publish:
    runs-on: ubuntu-latest
    needs: build-and-test-code
    env:
      # Only publish to Docker Hub if we have a change in the development branch
      DOCKERHUB_PUBLISH: ${{ github.event_name == 'push' && github.event.ref == 'ref/heads/development' && secrets.DOCKERHUB_USERNAME != '' }}
      # In case we run a pull request, the secrets are not available to us. Therefore check first
      # and assign a 'dummy' dockerhub username
      DOCKERHUB_USERNAME: ${{ ( secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_USERNAME ) || 'dummy' }}
    strategy:
      matrix:
        include:
        - platform: desktop
          architecture: linux/amd64
          weights: https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights
        - platform: xavier
          architecture: linux/arm64
          weights: https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights
        - platform: nano
          architecture: linux/arm64
          weights: https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v4_pre/yolov4-tiny.weights
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download weights
        run: wget ${{ matrix.weights }}
        working-directory: ./
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        if: ${{ env.DOCKERHUB_PUBLISH == true }}
        continue-on-error: true
        uses: docker/login-action@v1
        with:
          # Use the secrets directly and not the validated environment DOCKERHUB_USERNAME
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: docker/build/${{ matrix.platform }}/Dockerfile
          push: ${{ env.DOCKERHUB_PUBLISH == true }}
          tags: ${{ env.DOCKERHUB_USERNAME }}/opendatacam:development-${{ matrix.platform }}
